---
# role_version: 1.1.0
# requries 3 'le' variables to be set
# can handle Ubuntu, Debian, RaspberyOS, & FreeNAS Operating Systems
- name: ssl-cert package
  become: yes
  apt:
    update_cache: yes
    cache_valid_time: 3600
    name: ssl-cert
    state: latest
    autoremove: yes
  when: ansible_distribution == 'Ubuntu' or
        ansible_distribution == 'Debian'

- name: Check for acme.sh
  become: yes
  stat:
    path: /root/.acme.sh/acme.sh
  register: acmesh

- name: Copy installer
  become: yes
  copy:
    src: files/acme.sh
    dest: /root/acme.sh
    owner: root
    group: root
    mode: u=rwx,g=rx
  when: not acmesh.stat.exists
  notify: Cleanup installer

- name: acme installed
  become: yes
  command: /root/acme.sh --install
  args:
    chdir: /root
    creates: /root/.acme.sh/acme.sh
  when: not acmesh.stat.exists
  notify: Upgrade acme

- meta: flush_handlers

- name: acme account configured
  become: yes
  blockinfile:
    path: /root/.acme.sh/account.conf
    backup: yes
    marker: "### {mark} ANSIBLE MANAGED BLOCK ###"
    block: |
      ACCOUNT_EMAIL='{{le_account_email}}'
      SAVED_AWS_ACCESS_KEY_ID='{{le_aws_access_key_id}}'
      SAVED_AWS_SECRET_ACCESS_KEY='{{le_aws_secret_access_key}}'
      SAVED_AWS_DNS_SLOWRATE='5'

- name: Check server certificate
  become: yes
  stat:
    path: "/root/.acme.sh/{{inventory_hostname}}/{{inventory_hostname}}.cer"
  register: cert

- name: server cert
  become: yes
  command: /root/.acme.sh/acme.sh --issue --keylength 4096 --domain "{{inventory_hostname}}" --dns dns_aws
  args:
    chdir: /root
    creates: "/root/.acme.sh/{{inventory_hostname}}/{{inventory_hostname}}.cer"
  when: not cert.stat.exists

- name: server cert installed (Ubuntu/Debian)
  become: yes
  shell: >
    /root/.acme.sh/acme.sh -d "{{inventory_hostname}}" --install-cert
    --cert-file /etc/ssl/certs/{{inventory_hostname_short}}.pem
    --key-file /etc/ssl/private/{{inventory_hostname_short}}.key
    --fullchain-file /etc/ssl/certs/{{inventory_hostname_short}}_fullchain.cer
    --ca-file /etc/ssl/certs/letsencrypt_ca.cer
  args:
    chdir: /root/.acme.sh/{{inventory_hostname}}
    creates: /etc/ssl/certs/{{inventory_hostname_short}}.pem
  when: ansible_distribution == 'Ubuntu' or
        ansible_distribution == 'Debian'

- name: ssl private key permissions (Ubuntu/Debian)
  become: yes
  file:
    path: /etc/ssl/private/{{inventory_hostname_short}}.key
    state: file
    owner: root
    group: ssl-cert
    mode: u=rw,g=r,o=
  ignore_errors: "{{ansible_check_mode}}"
  when: ansible_distribution == 'Ubuntu' or
        ansible_distribution == 'Debian'
